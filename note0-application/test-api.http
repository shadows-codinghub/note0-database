### Note0 Application API Tests
### Make sure the application is running on http://localhost:8080

### 1. Test Home Page
GET http://localhost:8080/

### 2. Register a new user
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "fullName": "Test User",
  "email": "test@example.com",
  "password": "password123",
  "collegeName": "KTU Main Campus",
  "branch": "Computer Science",
  "semester": 4
}

### 3. Login with the registered user
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### 4. Login with admin user
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "admin@note0.com",
  "password": "admin123"
}

### 5. Get user profile (replace TOKEN with actual token from login response)
GET http://localhost:8080/api/users/me
Authorization: Bearer TOKEN

### 6. Get all materials (public endpoint)
GET http://localhost:8080/api/materials

### 7. Upload a material (replace TOKEN with actual token)
POST http://localhost:8080/api/materials/upload
Authorization: Bearer TOKEN
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

Sample DSA Notes
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

These are sample notes about data structures and algorithms.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="subjectId"

11111111-1111-1111-1111-111111111111
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="moduleNumber"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="sample.pdf"
Content-Type: application/pdf

< ./sample.pdf
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 8. Rate a material (replace TOKEN and MATERIAL_ID)
POST http://localhost:8080/api/materials/MATERIAL_ID/rate
Authorization: Bearer TOKEN
Content-Type: application/json

{
  "score": 4
}

### 9. Admin: Get all users (replace ADMIN_TOKEN)
GET http://localhost:8080/api/admin/users
Authorization: Bearer ADMIN_TOKEN

### 10. Admin: Verify a user (replace ADMIN_TOKEN and USER_ID)
PUT http://localhost:8080/api/admin/users/USER_ID/verify
Authorization: Bearer ADMIN_TOKEN

### 11. Test protected endpoint without token (should return 401)
GET http://localhost:8080/api/users/me

### 12. Test admin endpoint with regular user token (should return 403)
GET http://localhost:8080/api/admin/users
Authorization: Bearer TOKEN
